package net.ilexiconn.jurassicraft.client.model.entity;

import net.ilexiconn.jurassicraft.client.model.animation.Animator;
import net.ilexiconn.jurassicraft.client.model.base.ResettableModelRenderer;
import net.ilexiconn.jurassicraft.common.api.IAnimatedEntity;
import net.ilexiconn.jurassicraft.common.data.enums.JurassiCraftAnimationIDs;
import net.minecraft.client.model.ModelBase;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelUintatherium extends ModelBase
{
    public static final float PI = (float) Math.PI;
    ResettableModelRenderer leftbackleg1, leftbackleg2, leftbackleg3, leftbackleg4, rightbackleg1, rightbackleg2, rightbackleg3, rightbackleg4, leftfrontleg1, leftfrontleg2, leftfrontleg3, leftfrontleg4, rightfrontleg1, rightfrontleg2, rightfrontleg3, rightfrontleg4, upperfrontbody, bottomfrontbody, middlebody, upperbackbody, bottombackbody, neck, head, snout, mouth, rightupperhorn, leftupperhorn, rightmiddlehorn, leftmiddlehorn, rightbottomhorn, leftbottomhorn, lefttooth, righttooth, tail1, tail2, tail3, leftear, rightear;
    private Animator animator;

    public ModelUintatherium()
    {
        textureWidth = 128;
        textureHeight = 128;
        animator = new Animator(this);

        leftbackleg1 = new ResettableModelRenderer(this, 28, 65);
        leftbackleg1.addBox(-5F, -5.5F, -4F, 8, 11, 10);
        leftbackleg1.setRotationPoint(7F, 7F, 11F);
        leftbackleg1.setTextureSize(128, 128);
        leftbackleg1.mirror = true;
        setRotation(leftbackleg1, -0.2617994F, 0F, 0F);
        leftbackleg2 = new ResettableModelRenderer(this, 32, 86);
        leftbackleg2.addBox(-2.5F, 4F, -4F, 5, 5, 7);
        leftbackleg2.setRotationPoint(7F, 8F, 11F);
        leftbackleg2.setTextureSize(128, 128);
        leftbackleg2.mirror = true;
        setRotation(leftbackleg2, -0.2617994F, 0F, 0F);
        leftbackleg3 = new ResettableModelRenderer(this, 64, 65);
        leftbackleg3.addBox(-2F, 5.5F, -8.5F, 4, 7, 4);
        leftbackleg3.setRotationPoint(7F, 7F, 11F);
        leftbackleg3.setTextureSize(128, 128);
        leftbackleg3.mirror = true;
        setRotation(leftbackleg3, 0.4363323F, 0F, 0F);
        leftbackleg4 = new ResettableModelRenderer(this, 88, 38);
        leftbackleg4.addBox(-2F, 13F, 0F, 4, 4, 4);
        leftbackleg4.setRotationPoint(7F, 7F, 8F);
        leftbackleg4.setTextureSize(128, 128);
        leftbackleg4.mirror = true;
        setRotation(leftbackleg4, 0F, 0F, 0F);
        rightbackleg1 = new ResettableModelRenderer(this, 28, 65);
        rightbackleg1.addBox(-3F, -5.5F, -4F, 8, 11, 10);
        rightbackleg1.setRotationPoint(-7F, 7F, 11F);
        rightbackleg1.setTextureSize(128, 128);
        rightbackleg1.mirror = true;
        setRotation(rightbackleg1, -0.2617994F, 0F, 0F);
        rightbackleg2 = new ResettableModelRenderer(this, 32, 86);
        rightbackleg2.addBox(-2.5F, 4F, -4F, 5, 5, 7);
        rightbackleg2.setRotationPoint(-7.044445F, 8F, 11F);
        rightbackleg2.setTextureSize(128, 128);
        rightbackleg2.mirror = true;
        setRotation(rightbackleg2, -0.2617994F, 0F, 0F);
        rightbackleg3 = new ResettableModelRenderer(this, 64, 65);
        rightbackleg3.addBox(-2.033333F, 5.5F, -8.5F, 4, 7, 4);
        rightbackleg3.setRotationPoint(-7F, 7F, 11F);
        rightbackleg3.setTextureSize(128, 128);
        rightbackleg3.mirror = true;
        setRotation(rightbackleg3, 0.4363323F, 0F, 0F);
        rightbackleg4 = new ResettableModelRenderer(this, 88, 38);
        rightbackleg4.addBox(-2F, 13F, 0F, 4, 4, 4);
        rightbackleg4.setRotationPoint(-7F, 7F, 8F);
        rightbackleg4.setTextureSize(128, 128);
        rightbackleg4.mirror = true;
        setRotation(rightbackleg4, 0F, 0F, 0F);
        leftfrontleg1 = new ResettableModelRenderer(this, 0, 68);
        leftfrontleg1.addBox(-4F, -5F, -2F, 6, 10, 8);
        leftfrontleg1.setRotationPoint(7F, 7F, -10F);
        leftfrontleg1.setTextureSize(128, 128);
        leftfrontleg1.mirror = true;
        setRotation(leftfrontleg1, 0.17453292519F, 0F, 0F);
        leftfrontleg2 = new ResettableModelRenderer(this, 0, 86);
        leftfrontleg2.addBox(-2.5F, 4F, -1.5F, 4, 7, 4);
        leftfrontleg2.setRotationPoint(7F, 7F, -10F);
        leftfrontleg2.setTextureSize(128, 128);
        leftfrontleg2.mirror = true;
        setRotation(leftfrontleg2, 0.4363323F, 0F, 0F);
        leftfrontleg3 = new ResettableModelRenderer(this, 16, 86);
        leftfrontleg3.addBox(-2.5F, 6.5F, 4F, 4, 6, 4);
        leftfrontleg3.setRotationPoint(7F, 7F, -10F);
        leftfrontleg3.setTextureSize(128, 128);
        leftfrontleg3.mirror = true;
        setRotation(leftfrontleg3, -0.2617994F, 0F, 0F);
        leftfrontleg4 = new ResettableModelRenderer(this, 88, 38);
        leftfrontleg4.addBox(-2.5F, 13F, 0.5F, 4, 4, 4);
        leftfrontleg4.setRotationPoint(7F, 7F, -10F);
        leftfrontleg4.setTextureSize(128, 128);
        leftfrontleg4.mirror = true;
        setRotation(leftfrontleg4, 0F, 0F, 0F);
        rightfrontleg1 = new ResettableModelRenderer(this, 0, 68);
        rightfrontleg1.addBox(-2F, -5F, -2F, 6, 10, 8);
        rightfrontleg1.setRotationPoint(-7F, 7F, -10F);
        rightfrontleg1.setTextureSize(128, 128);
        rightfrontleg1.mirror = true;
        setRotation(rightfrontleg1, 0.17453292519F, 0F, 0F);
        rightfrontleg2 = new ResettableModelRenderer(this, 0, 86);
        rightfrontleg2.addBox(-1.5F, 4F, -1.5F, 4, 7, 4);
        rightfrontleg2.setRotationPoint(-7F, 7F, -10F);
        rightfrontleg2.setTextureSize(128, 128);
        rightfrontleg2.mirror = true;
        setRotation(rightfrontleg2, 0.4363323F, 0F, 0F);
        rightfrontleg3 = new ResettableModelRenderer(this, 16, 86);
        rightfrontleg3.addBox(-1.5F, 6.5F, 4F, 4, 6, 4);
        rightfrontleg3.setRotationPoint(-7F, 7F, -10F);
        rightfrontleg3.setTextureSize(128, 128);
        rightfrontleg3.mirror = true;
        setRotation(rightfrontleg3, -0.2617994F, 0F, 0F);
        rightfrontleg4 = new ResettableModelRenderer(this, 88, 38);
        rightfrontleg4.addBox(-1.5F, 13F, 0.5F, 4, 4, 4);
        rightfrontleg4.setRotationPoint(-7F, 7F, -10F);
        rightfrontleg4.setTextureSize(128, 128);
        rightfrontleg4.mirror = true;
        setRotation(rightfrontleg4, 0F, 0F, 0F);
        upperfrontbody = new ResettableModelRenderer(this, 66, 0);
        upperfrontbody.addBox(-7.5F, -6F, -14.5F, 15, 12, 10);
        upperfrontbody.setRotationPoint(0F, 5F, 0F);
        upperfrontbody.setTextureSize(128, 128);
        upperfrontbody.mirror = true;
        setRotation(upperfrontbody, 0.1745329F, 0F, 0F);
        bottomfrontbody = new ResettableModelRenderer(this, 66, 22);
        bottomfrontbody.addBox(-7F, 4.2F, -11.5F, 14, 6, 10);
        bottomfrontbody.setRotationPoint(0F, 5F, 0F);
        bottomfrontbody.setTextureSize(128, 128);
        bottomfrontbody.mirror = true;
        setRotation(bottomfrontbody, -0.17453292519F, 0F, 0F);
        middlebody = new ResettableModelRenderer(this, 0, 0);
        middlebody.addBox(-7.5F, -5F, -6F, 15, 15, 18);
        middlebody.setRotationPoint(0F, 5F, 0F);
        middlebody.setTextureSize(128, 128);
        middlebody.mirror = true;
        setRotation(middlebody, 0F, 0F, 0F);
        upperbackbody = new ResettableModelRenderer(this, 0, 33);
        upperbackbody.addBox(-7F, -6F, 10F, 14, 11, 8);
        upperbackbody.setRotationPoint(0F, 5F, 0F);
        upperbackbody.setTextureSize(128, 128);
        upperbackbody.mirror = true;
        setRotation(upperbackbody, -0.17453292519F, 0F, 0F);
        bottombackbody = new ResettableModelRenderer(this, 44, 38);
        bottombackbody.addBox(-7F, 7F, 10F, 14, 2, 6);
        bottombackbody.setRotationPoint(0F, 5F, 0F);
        bottombackbody.setTextureSize(128, 128);
        bottombackbody.mirror = true;
        setRotation(bottombackbody, 0F, 0F, 0F);
        neck = new ResettableModelRenderer(this, 86, 46);
        neck.addBox(-4F, -2F, -1.5F, 8, 6, 5);
        neck.setRotationPoint(0F, 3F, -15F);
        neck.setTextureSize(128, 128);
        neck.mirror = true;
        setRotation(neck, 0F, 0F, 0F);
        head = new ResettableModelRenderer(this, 0, 52);
        head.addBox(-4.5F, -3F, -8F, 9, 8, 8);
        head.setRotationPoint(0F, 3F, -15F);
        head.setTextureSize(128, 128);
        head.mirror = true;
        setRotation(head, 0.4886922F, 0F, 0F);
        snout = new ResettableModelRenderer(this, 34, 52);
        snout.addBox(-3.988889F, -5F, -14.5F, 8, 5, 8);
        snout.setRotationPoint(0F, 3F, -15F);
        snout.setTextureSize(128, 128);
        snout.mirror = true;
        setRotation(snout, 0.78539816339F, 0F, 0F);
        mouth = new ResettableModelRenderer(this, 58, 46);
        mouth.addBox(-3F, -0.8F, -13.5F, 6, 3, 8);
        mouth.setRotationPoint(0F, 4F, -15F);
        mouth.setTextureSize(128, 128);
        mouth.mirror = true;
        setRotation(mouth, 0.715585F, 0F, 0F);
        rightupperhorn = new ResettableModelRenderer(this, 120, 0);
        rightupperhorn.addBox(-2.711111F, -6.5F, -3F, 1, 3, 1);
        rightupperhorn.setRotationPoint(0F, 3F, -15F);
        rightupperhorn.setTextureSize(128, 128);
        rightupperhorn.mirror = true;
        setRotation(rightupperhorn, 0.5759587F, 0F, -0.17453292519F);
        leftupperhorn = new ResettableModelRenderer(this, 120, 0);
        leftupperhorn.addBox(2.288889F, -6.5F, -3F, 1, 3, 1);
        leftupperhorn.setRotationPoint(0F, 3F, -15F);
        leftupperhorn.setTextureSize(128, 128);
        leftupperhorn.mirror = true;
        setRotation(leftupperhorn, 0.5759587F, 0F, 0.17453292519F);
        rightmiddlehorn = new ResettableModelRenderer(this, 120, 0);
        rightmiddlehorn.addBox(-3F, -7.5F, -8F, 1, 3, 1);
        rightmiddlehorn.setRotationPoint(0F, 3F, -15F);
        rightmiddlehorn.setTextureSize(128, 128);
        rightmiddlehorn.mirror = true;
        setRotation(rightmiddlehorn, 0.78539816339F, 0F, -0.17453292519F);
        leftmiddlehorn = new ResettableModelRenderer(this, 120, 0);
        leftmiddlehorn.addBox(2F, -7.5F, -8F, 1, 3, 1);
        leftmiddlehorn.setRotationPoint(0F, 3F, -15F);
        leftmiddlehorn.setTextureSize(128, 128);
        leftmiddlehorn.mirror = true;
        setRotation(leftmiddlehorn, 0.78539816339F, 0F, 0.17453292519F);
        rightbottomhorn = new ResettableModelRenderer(this, 116, 0);
        rightbottomhorn.addBox(-3F, -6.5F, -13.5F, 1, 2, 1);
        rightbottomhorn.setRotationPoint(0F, 3F, -15F);
        rightbottomhorn.setTextureSize(128, 128);
        rightbottomhorn.mirror = true;
        setRotation(rightbottomhorn, 0.7504916F, 0F, -0.17453292519F);
        leftbottomhorn = new ResettableModelRenderer(this, 116, 0);
        leftbottomhorn.addBox(2F, -6.5F, -13.5F, 1, 2, 1);
        leftbottomhorn.setRotationPoint(0F, 3F, -15F);
        leftbottomhorn.setTextureSize(128, 128);
        leftbottomhorn.mirror = true;
        setRotation(leftbottomhorn, 0.7504916F, 0F, 0.17453292519F);
        lefttooth = new ResettableModelRenderer(this, 116, 4);
        lefttooth.addBox(2.5F, 2.5F, -11.5F, 1, 2, 1);
        lefttooth.setRotationPoint(0F, 3F, -15F);
        lefttooth.setTextureSize(128, 128);
        lefttooth.mirror = true;
        setRotation(lefttooth, 0.52359877559F, 0F, 0F);
        righttooth = new ResettableModelRenderer(this, 116, 4);
        righttooth.addBox(-3.5F, 2.5F, -11.5F, 1, 2, 1);
        righttooth.setRotationPoint(0F, 3F, -15F);
        righttooth.setTextureSize(128, 128);
        righttooth.mirror = true;
        setRotation(righttooth, 0.52359877559F, 0F, 0F);
        tail1 = new ResettableModelRenderer(this, 85, 60);
        tail1.addBox(-0.5F, -0.5F, 0F, 1, 1, 4);
        tail1.setRotationPoint(0F, 4F, 17.97778F);
        tail1.setTextureSize(128, 128);
        tail1.mirror = true;
        setRotation(tail1, -0.78539816339F, 0F, 0F);
        tail2 = new ResettableModelRenderer(this, 85, 65);
        tail2.addBox(-0.5F, -2.6F, 3F, 1, 1, 4);
        tail2.setRotationPoint(0F, 4F, 18F);
        tail2.setTextureSize(128, 128);
        tail2.mirror = true;
        setRotation(tail2, -1.3962634016F, 0F, 0F);
        tail3 = new ResettableModelRenderer(this, 85, 70);
        tail3.addBox(-1F, -2F, 6F, 2, 0, 3);
        tail3.setRotationPoint(0F, 4F, 18F);
        tail3.setTextureSize(128, 128);
        tail3.mirror = true;
        setRotation(tail3, -1.3962634016F, 0F, 0F);
        leftear = new ResettableModelRenderer(this, 100, 60);
        leftear.addBox(3F, -4F, -3.5F, 2, 3, 1);
        leftear.setRotationPoint(0F, 3F, -15F);
        leftear.setTextureSize(128, 128);
        leftear.mirror = true;
        setRotation(leftear, -0.17453292519F, -0.17453292519F, 0.17453292519F);
        rightear = new ResettableModelRenderer(this, 106, 60);
        rightear.addBox(-5F, -4F, -3.5F, 2, 3, 1);
        rightear.setRotationPoint(0F, 3F, -15F);
        rightear.setTextureSize(128, 128);
        rightear.mirror = true;
        setRotation(rightear, -0.17453292519F, 0.17453292519F, -0.17453292519F);

        leftbackleg1.savefirstParameters();
        leftbackleg2.savefirstParameters();
        leftbackleg3.savefirstParameters();
        leftbackleg4.savefirstParameters();
        rightbackleg1.savefirstParameters();
        rightbackleg2.savefirstParameters();
        rightbackleg3.savefirstParameters();
        rightbackleg4.savefirstParameters();
        leftfrontleg1.savefirstParameters();
        leftfrontleg2.savefirstParameters();
        leftfrontleg3.savefirstParameters();
        leftfrontleg4.savefirstParameters();
        rightfrontleg1.savefirstParameters();
        rightfrontleg2.savefirstParameters();
        rightfrontleg3.savefirstParameters();
        rightfrontleg4.savefirstParameters();
        upperfrontbody.savefirstParameters();
        bottomfrontbody.savefirstParameters();
        middlebody.savefirstParameters();
        upperbackbody.savefirstParameters();
        bottombackbody.savefirstParameters();
        neck.savefirstParameters();
        head.savefirstParameters();
        snout.savefirstParameters();
        mouth.savefirstParameters();
        rightupperhorn.savefirstParameters();
        leftupperhorn.savefirstParameters();
        rightmiddlehorn.savefirstParameters();
        leftmiddlehorn.savefirstParameters();
        rightbottomhorn.savefirstParameters();
        leftbottomhorn.savefirstParameters();
        lefttooth.savefirstParameters();
        righttooth.savefirstParameters();
        tail1.savefirstParameters();
        tail2.savefirstParameters();
        tail3.savefirstParameters();
        leftear.savefirstParameters();
        rightear.savefirstParameters();
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        animate(entity, f, f1, f2, f3, f4, f5);

        leftbackleg1.render(f5);
        leftbackleg2.render(f5);
        leftbackleg3.render(f5);
        leftbackleg4.render(f5);
        rightbackleg1.render(f5);
        rightbackleg2.render(f5);
        rightbackleg3.render(f5);
        rightbackleg4.render(f5);
        leftfrontleg1.render(f5);
        leftfrontleg2.render(f5);
        leftfrontleg3.render(f5);
        leftfrontleg4.render(f5);
        rightfrontleg1.render(f5);
        rightfrontleg2.render(f5);
        rightfrontleg3.render(f5);
        rightfrontleg4.render(f5);
        upperfrontbody.render(f5);
        bottomfrontbody.render(f5);
        middlebody.render(f5);
        upperbackbody.render(f5);
        bottombackbody.render(f5);
        neck.render(f5);
        head.render(f5);
        snout.render(f5);
        mouth.render(f5);
        rightupperhorn.render(f5);
        leftupperhorn.render(f5);
        rightmiddlehorn.render(f5);
        leftmiddlehorn.render(f5);
        rightbottomhorn.render(f5);
        leftbottomhorn.render(f5);
        lefttooth.render(f5);
        righttooth.render(f5);
        tail1.render(f5);
        tail2.render(f5);
        tail3.render(f5);
        leftear.render(f5);
        rightear.render(f5);
    }

    private void setRotation(ResettableModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
    {
        super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        upperbackbody.rotateAngleX = upperbackbody.firstRotateAngleX;
        upperbackbody.rotateAngleY = upperbackbody.firstRotateAngleY;
        upperbackbody.rotateAngleZ = upperbackbody.firstRotateAngleZ;

        head.rotateAngleX = f4 / (225F / PI) + head.firstRotateAngleX;
        snout.rotateAngleX = f4 / (225F / PI) + snout.firstRotateAngleX;
        mouth.rotateAngleX = f4 / (225F / PI) + mouth.firstRotateAngleX;
        lefttooth.rotateAngleX = f4 / (225F / PI) + lefttooth.firstRotateAngleX;
        righttooth.rotateAngleX = f4 / (225F / PI) + righttooth.firstRotateAngleX;
        leftear.rotateAngleX = f4 / (225F / PI) + leftear.firstRotateAngleX;
        rightear.rotateAngleX = f4 / (225F / PI) + rightear.firstRotateAngleX;
        rightupperhorn.rotateAngleX = f4 / (225F / PI) + rightupperhorn.firstRotateAngleX;
        leftupperhorn.rotateAngleX = f4 / (225F / PI) + leftupperhorn.firstRotateAngleX;
        rightmiddlehorn.rotateAngleX = f4 / (225F / PI) + rightmiddlehorn.firstRotateAngleX;
        leftmiddlehorn.rotateAngleX = f4 / (225F / PI) + leftmiddlehorn.firstRotateAngleX;
        rightbottomhorn.rotateAngleX = f4 / (225F / PI) + rightbottomhorn.firstRotateAngleX;
        leftbottomhorn.rotateAngleX = f4 / (225F / PI) + leftbottomhorn.firstRotateAngleX;

        head.rotateAngleY = f3 / (225F / PI) + head.firstRotateAngleY;
        snout.rotateAngleY = f3 / (225F / PI) + snout.firstRotateAngleY;
        mouth.rotateAngleY = f3 / (225F / PI) + mouth.firstRotateAngleY;
        lefttooth.rotateAngleY = f3 / (225F / PI) + lefttooth.firstRotateAngleY;
        righttooth.rotateAngleY = f3 / (225F / PI) + righttooth.firstRotateAngleY;
        leftear.rotateAngleY = f3 / (225F / PI) + leftear.firstRotateAngleY;
        rightear.rotateAngleY = f3 / (225F / PI) + rightear.firstRotateAngleY;
        rightupperhorn.rotateAngleY = f3 / (225F / PI) + rightupperhorn.firstRotateAngleY;
        leftupperhorn.rotateAngleY = f3 / (225F / PI) + leftupperhorn.firstRotateAngleY;
        rightmiddlehorn.rotateAngleY = f3 / (225F / PI) + rightmiddlehorn.firstRotateAngleY;
        leftmiddlehorn.rotateAngleY = f3 / (225F / PI) + leftmiddlehorn.firstRotateAngleY;
        rightbottomhorn.rotateAngleY = f3 / (225F / PI) + rightbottomhorn.firstRotateAngleY;
        leftbottomhorn.rotateAngleY = f3 / (225F / PI) + leftbottomhorn.firstRotateAngleY;

        rightupperhorn.rotateAngleZ = rightupperhorn.firstRotateAngleZ / 8;
        leftupperhorn.rotateAngleZ = leftupperhorn.firstRotateAngleZ / 8;
        rightmiddlehorn.rotateAngleZ = rightmiddlehorn.firstRotateAngleZ / 8;
        leftmiddlehorn.rotateAngleZ = leftmiddlehorn.firstRotateAngleZ / 8;
        rightbottomhorn.rotateAngleZ = rightbottomhorn.firstRotateAngleZ / 8;
        leftbottomhorn.rotateAngleZ = leftbottomhorn.firstRotateAngleZ / 8;

        leftbackleg1.rotateAngleX = MathHelper.cos(f * 0.6662F + PI) * 1.0F * f1 + leftbackleg1.firstRotateAngleX;
        leftbackleg2.rotateAngleX = MathHelper.cos(f * 0.6662F + PI) * 1.0F * f1 + leftbackleg2.firstRotateAngleX;
        leftbackleg3.rotateAngleX = MathHelper.cos(f * 0.6662F + PI) * 1.0F * f1 + leftbackleg3.firstRotateAngleX;
        leftbackleg4.rotateAngleX = MathHelper.cos(f * 0.6662F + PI) * 1.0F * f1 + leftbackleg4.firstRotateAngleX;

        rightbackleg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1 + rightbackleg1.firstRotateAngleX;
        rightbackleg2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1 + rightbackleg2.firstRotateAngleX;
        rightbackleg3.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1 + rightbackleg3.firstRotateAngleX;
        rightbackleg4.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1 + rightbackleg4.firstRotateAngleX;

        leftfrontleg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1 + leftfrontleg1.firstRotateAngleX;
        leftfrontleg2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1 + leftfrontleg2.firstRotateAngleX;
        leftfrontleg3.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1 + leftfrontleg3.firstRotateAngleX;
        leftfrontleg4.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.0F * f1 + leftfrontleg4.firstRotateAngleX;

        rightfrontleg1.rotateAngleX = MathHelper.cos(f * 0.6662F + PI) * 1.0F * f1 + rightfrontleg1.firstRotateAngleX;
        rightfrontleg2.rotateAngleX = MathHelper.cos(f * 0.6662F + PI) * 1.0F * f1 + rightfrontleg2.firstRotateAngleX;
        rightfrontleg3.rotateAngleX = MathHelper.cos(f * 0.6662F + PI) * 1.0F * f1 + rightfrontleg3.firstRotateAngleX;
        rightfrontleg4.rotateAngleX = MathHelper.cos(f * 0.6662F + PI) * 1.0F * f1 + rightfrontleg4.firstRotateAngleX;

        tail1.rotateAngleX = 0.05F * MathHelper.sin(0.10F * f2 + f1) + tail1.firstRotateAngleX;
        tail2.rotateAngleX = 0.05F * MathHelper.sin(0.10F * f2 + f1) + tail2.firstRotateAngleX;
        tail3.rotateAngleX = 0.05F * MathHelper.sin(0.10F * f2 + f1) + tail3.firstRotateAngleX;
        tail1.rotateAngleY = 0.05F * MathHelper.sin(0.10F * f2 + f1) + tail1.firstRotateAngleY;
        tail2.rotateAngleY = 0.05F * MathHelper.sin(0.10F * f2 + f1) + tail2.firstRotateAngleY;
        tail3.rotateAngleY = 0.05F * MathHelper.sin(0.10F * f2 + f1) + tail3.firstRotateAngleY;
        tail1.rotateAngleZ = 0.05F * MathHelper.cos(0.10F * f2 + f1) + tail1.firstRotateAngleZ;
        tail2.rotateAngleZ = 0.05F * MathHelper.cos(0.10F * f2 + f1) + tail2.firstRotateAngleZ;
        tail3.rotateAngleZ = 0.05F * MathHelper.cos(0.10F * f2 + f1) + tail3.firstRotateAngleZ;
    }

    public void animate(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        animator.update((IAnimatedEntity) entity);
        setRotationAngles(f, f1, f2, f3, f4, f5, entity);

        animator.setAnimation(JurassiCraftAnimationIDs.HEADBUTT.animID());
        animator.startPhase(7);
        animator.rotate(head, PI / 3F, 0F, 0F);
        animator.rotate(snout, PI / 3F, 0F, 0F);
        animator.rotate(mouth, PI / 3F, 0F, 0F);
        animator.rotate(rightupperhorn, PI / 3F, 0F, 0F);
        animator.rotate(leftupperhorn, PI / 3F, 0F, 0F);
        animator.rotate(rightmiddlehorn, PI / 3F, 0F, 0F);
        animator.rotate(leftmiddlehorn, PI / 3F, 0F, 0F);
        animator.rotate(rightbottomhorn, PI / 3F, 0F, 0F);
        animator.rotate(leftbottomhorn, PI / 3F, 0F, 0F);
        animator.rotate(lefttooth, PI / 3F, 0F, 0F);
        animator.rotate(righttooth, PI / 3F, 0F, 0F);
        animator.rotate(leftear, PI / 3F, 0F, 0F);
        animator.rotate(rightear, PI / 3F, 0F, 0F);
        animator.endPhase();
        animator.setStationaryPhase(3);
        animator.startPhase(3);
        animator.rotate(head, -PI / 2F, 0F, 0F);
        animator.rotate(snout, -PI / 2F, 0F, 0F);
        animator.rotate(mouth, -PI / 2F, 0F, 0F);
        animator.rotate(rightupperhorn, -PI / 2F, 0F, 0F);
        animator.rotate(leftupperhorn, -PI / 2F, 0F, 0F);
        animator.rotate(rightmiddlehorn, -PI / 2F, 0F, 0F);
        animator.rotate(leftmiddlehorn, -PI / 2F, 0F, 0F);
        animator.rotate(rightbottomhorn, -PI / 2F, 0F, 0F);
        animator.rotate(leftbottomhorn, -PI / 2F, 0F, 0F);
        animator.rotate(lefttooth, -PI / 2F, 0F, 0F);
        animator.rotate(righttooth, -PI / 2F, 0F, 0F);
        animator.rotate(leftear, -PI / 2F, 0F, 0F);
        animator.rotate(rightear, -PI / 2F, 0F, 0F);
        animator.endPhase();
        animator.resetPhase(2);
    }

}
